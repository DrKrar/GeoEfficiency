# Documentation: https://github.com/JuliaCI/Appveyor.jl
# Adjust julia_version numbers as needed. Accepted are:
# nightly: for latest nightly build.
# 1: for latest version 1 major release
# x.y: for latest x.y minor release
# x.y.z: for exact x.y.z release

environment:
  matrix:
  - julia_version: 1
  - julia_version: nightly

platform:
  - x86 # 32-bit
  - x64 # 64-bit

# # Uncomment the following lines to allow failures on nightly julia
# # (tests will run but not make your overall status red)
# matrix:
#   allow_failures:
#   - julia_version: nightly


branches:
  only:
   - master
   - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
  - ps: iex ((new-object net.webclient).DownloadString("https://raw.githubusercontent.com/JuliaCI/Appveyor.jl/version-1/bin/install.ps1"))

build_script:
  - echo "%JL_BUILD_SCRIPT%"
  - C:\julia\bin\julia -e "%JL_BUILD_SCRIPT%"

test_script:
  - echo "%JL_TEST_SCRIPT%"
  - C:\julia\bin\julia -e "%JL_TEST_SCRIPT%"

#
#install:
#  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
## Download most recent Julia Windows binary
#  - ps: (new-object net.webclient).DownloadFile(
#        $env:JULIA_URL,
#        "C:\projects\julia-binary.exe")
## Run installer silently, output to C:\projects\julia
#  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

#build_script:
# Need to convert from shallow to complete for Pkg.clone to work
#  - IF EXIST .git\shallow (git fetch --unshallow)
#  - C:\projects\julia\bin\julia -e "using InteractiveUtils; versioninfo();
#          import Pkg; Pkg.clone(pwd(), \"GeoEfficiency\"); Pkg.build(\"GeoEfficiency\")"

#test_script:
#  - C:\projects\julia\bin\julia --check-bounds=yes -e "import Pkg; Pkg.test(\"GeoEfficiency\")"